<!-- This a Ant build file whose sole purpose is to test 
both a complete vanilla TSP build, and an XMLRPC TSP build,
so as to be able to do continuous integration for the
build of TSP, in a tool such as cruisecontrol  -->
<project name="tsp" default="build" basedir="..">

    <property name="build.dir" value="tsp_cc_build"/>
    <property name="tsp.dir" value=".."/>

    <macrodef name="cmake">
                <attribute name="flags" default=""/>
                <sequential>
                        <exec dir="${build.dir}" executable="cmake" failonerror="true">
                            <arg line="@{flags} ${tsp.dir}"/>
                        </exec>
                </sequential>
    </macrodef>

    <macrodef name="make">                
                <sequential>
                        <exec dir="${build.dir}" executable="make" failonerror="true"/>
                </sequential>
    </macrodef> 

    <macrodef name="cvs-update">
                <attribute name="workDir"/>
                <sequential>
                        <exec dir="@{workDir}" executable="cvs" failonerror="true">
                                <arg line="update -dP "/>
                        </exec>
                </sequential>
    </macrodef>

    <target name="build" depends="update">
        <antcall target="vanilla"/>
        <antcall target="xmlrpc"/>
    </target>

    <target name="vanilla" depends="clean">
        <cmake/>
        <make/>
    </target>

    <target name="xmlrpc" depends="clean">
        <cmake flags="-DBUILD_XMLRPC=ON"/>
        <make/>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <mkdir dir="${build.dir}"/>
    </target>

    <target name="update">
        <cvs-update workDir="${basedir}"/>
    </target>


</project>
