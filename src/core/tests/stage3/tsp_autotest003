#!/bin/tcsh

#-----------------------------------------------
#CUSTOMIZE : input RES File name 
# FILE1 must be smaller that FILE2 (timing problem with test, else...)
set CUSTOM_RESFILE2="IQT_GLOBAL_07.sync.res"
#double of float
set OUTFILETYPE2="d"

set CUSTOM_RESFILE1="A_NCK01_020701_1834_tmA.res"
#double of float
set OUTFILETYPE1="f"
#-----------------------------------------------


#get test number with script name
set TESTNB=`echo $0 | perl -n -e  '~/([1-9][0-9]*)$/;print $1'`

echo "------------------------------------"
echo "---------- AUTOTEST $TESTNB ------------"
echo "------------------------------------"
echo " - pasive data stream check "
echo " - STEP 1 : check all symbols "
echo " - STEP 2 : check first, middle, and last symbol "

set TESTPATH=$DEVBASE/src/tsp/tests/stage3
set BIN2ASC=$DEVBASE/../plot442/versions/CURRENT/bin/bin2asc

#check bin2asc presence
if ( ! -x $BIN2ASC ) then
    echo "Error : unable to find executable bin2asc at : '$BIN2ASC'"
    exit (1)
endif

set PROVIDER=tsp_server${TESTNB}_resreader
set CONSUMER=tsp_client${TESTNB}_reswriter

#create a timetag (avoid mixing up files thrue parallel tests)
set TIMETAG=`date| sed -e 's/[ :]//g'` 

#create file names 
set IN_RESFILE1=$TESTPATH/$CUSTOM_RESFILE1
set IN_RESFILE2=$TESTPATH/$CUSTOM_RESFILE2
set OUT_RESFILE1="/tmp/tsp_test_stage3_out1_file_$TIMETAG.res"
set OUT_RESFILE2="/tmp/tsp_test_stage3_out2_file_$TIMETAG.res"
set IN_ASCFILE1="/tmp/tsp_test_stage3_in1_file_$TIMETAG.asc"
set IN_ASCFILE2="/tmp/tsp_test_stage3_in2_file_$TIMETAG.asc"
set OUT_ASCFILE1="/tmp/tsp_test_stage3_out1_file_$TIMETAG.asc"
set OUT_ASCFILE2="/tmp/tsp_test_stage3_out2_file_$TIMETAG.asc"
set IN_RESFILE_VARLIST1="/tmp/tsp_test_stage3_in1_file_$TIMETAG.var"
set IN_RESFILE_VARLIST2="/tmp/tsp_test_stage3_in2_file_$TIMETAG.var"
set OUT_RESFILE_VARLIST1="/tmp/tsp_test_stage3_out1_file_$TIMETAG.var"
set OUT_RESFILE_VARLIST2="/tmp/tsp_test_stage3_out2_file_$TIMETAG.var"

setenv STRACE_DEBUG 2

#Run provider with no file
$PROVIDER > /dev/null &
sleep 1



#Run consumer test 1
$CONSUMER localhost 1  --tsp-stream-init-start $IN_RESFILE1 --tsp-stream-init-stop $OUT_RESFILE1 $OUTFILETYPE1 1 &
$CONSUMER localhost 1  --tsp-stream-init-start $IN_RESFILE2 --tsp-stream-init-stop $OUT_RESFILE2 $OUTFILETYPE2 1
sleep 3

#1-> Create variable list from initial .res
#2-> remove anoying 'VT >', replace tab, \n and multiple spaces by one space
#3 -> Add \n at the end
#by the way, we use >& because it seems that the var list is redirected to the err stream by bin2asc..
#dont't ask me why.
echo "-v" |  $BIN2ASC $IN_RESFILE1  >&  $IN_RESFILE_VARLIST1
perl -i -p -e 's/\s+/ /g; s/VT >//g;' $IN_RESFILE_VARLIST1
perl -i -n -e 'print "$_\n"' $IN_RESFILE_VARLIST1

echo "-v" |  $BIN2ASC $IN_RESFILE2  >&  $IN_RESFILE_VARLIST2
perl -i -p -e 's/\s+/ /g; s/VT >//g;' $IN_RESFILE_VARLIST2
perl -i -n -e 'print "$_\n"' $IN_RESFILE_VARLIST2


#Create variable list from new .res
echo "-v" |  $BIN2ASC $OUT_RESFILE1  >&  $OUT_RESFILE_VARLIST1
perl -i -p -e 's/\s+/ /g; s/VT >//g;' $OUT_RESFILE_VARLIST1
perl -i -n -e 'print "$_\n"' $OUT_RESFILE_VARLIST1

echo "-v" |  $BIN2ASC $OUT_RESFILE2  >&  $OUT_RESFILE_VARLIST2
perl -i -p -e 's/\s+/ /g; s/VT >//g;' $OUT_RESFILE_VARLIST2
perl -i -n -e 'print "$_\n"' $OUT_RESFILE_VARLIST2

# create ascii file from in .res file for all variables
cat $IN_RESFILE_VARLIST1 | $BIN2ASC $IN_RESFILE1 > $IN_ASCFILE1 
cat $IN_RESFILE_VARLIST2 | $BIN2ASC $IN_RESFILE2 > $IN_ASCFILE2
cat $OUT_RESFILE_VARLIST1 | $BIN2ASC $OUT_RESFILE1 > $OUT_ASCFILE1 
cat $OUT_RESFILE_VARLIST2 | $BIN2ASC $OUT_RESFILE2 > $OUT_ASCFILE2 


# calc file diff
# well, if there are too many diff, the RES_DIFF will be too long and the script will fail. That's what we want anyway.
set RES_DIFF1=`diff  $IN_ASCFILE1 $OUT_ASCFILE1`
set RES_DIFF2=`diff  $IN_ASCFILE2 $OUT_ASCFILE2`

\rm $OUT_RESFILE1
\rm $OUT_RESFILE2
\rm $IN_ASCFILE1
\rm $IN_ASCFILE2
\rm $OUT_ASCFILE1
\rm $OUT_ASCFILE2
\rm $OUT_RESFILE_VARLIST1
\rm $OUT_RESFILE_VARLIST2

if ( ("$RES_DIFF1" == "") && ("$RES_DIFF2" == "") ) then
    echo "TEST||STAGE $TESTNB STEP 1 : PASSED"
else
    echo "@@@@ TEST||STAGE $TESTNB STEP 1 : FAILED @@@@"
    exit 1
endif

#------------------------------------------------

#We keep the same provider
$CONSUMER localhost 1  --tsp-stream-init-start $IN_RESFILE1 --tsp-stream-init-stop $OUT_RESFILE1 $OUTFILETYPE1 2 &
$CONSUMER localhost 1  --tsp-stream-init-start $IN_RESFILE2 --tsp-stream-init-stop $OUT_RESFILE2 $OUTFILETYPE2 2
sleep 3


#kill the provider
custom_killall $PROVIDER

#get first, midle and last variable name from all var names
set FIRST_MIDLE_LAST_VAR1=`perl -n -a -e 'print "$F[0] $F[int(($#F+1)/2)] $F[$#F]\n"' $IN_RESFILE_VARLIST1`
set FIRST_MIDLE_LAST_VAR2=`perl -n -a -e 'print "$F[0] $F[int(($#F+1)/2)] $F[$#F]\n"' $IN_RESFILE_VARLIST2`

#create a whole new file from variable names from the new res file
#normally the new var file must have only FIRST_VAR, MIDDLE_VAR and LAST_VAR
#Create variable list from new .res
echo "-v" |  $BIN2ASC $OUT_RESFILE1  >&  $OUT_RESFILE_VARLIST1
perl -i -p -e 's/\s+/ /g; s/VT >//g;' $OUT_RESFILE_VARLIST1
perl -i -n -e 'print "$_\n"' $OUT_RESFILE_VARLIST1

echo "-v" |  $BIN2ASC $OUT_RESFILE2  >&  $OUT_RESFILE_VARLIST2
perl -i -p -e 's/\s+/ /g; s/VT >//g;' $OUT_RESFILE_VARLIST2
perl -i -n -e 'print "$_\n"' $OUT_RESFILE_VARLIST2

# create ascii file from in .res file for first, midle and last variables
echo "$FIRST_MIDLE_LAST_VAR1" | $BIN2ASC $IN_RESFILE1 > $IN_ASCFILE1 
echo "$FIRST_MIDLE_LAST_VAR2" | $BIN2ASC $IN_RESFILE2 > $IN_ASCFILE2 

# create ascii file from in .res file for all variables for the new file
cat $OUT_RESFILE_VARLIST1 | $BIN2ASC $OUT_RESFILE1 > $OUT_ASCFILE1 
cat $OUT_RESFILE_VARLIST2 | $BIN2ASC $OUT_RESFILE2 > $OUT_ASCFILE2 

# calc file diff
# well, if there are too many diff, the RES_DIFF will be too long and the script will fail. That's what we want anyway.
set RES_DIFF1=`diff  $IN_ASCFILE1 $OUT_ASCFILE1`
set RES_DIFF2=`diff  $IN_ASCFILE2 $OUT_ASCFILE2`

\rm $OUT_RESFILE1
\rm $OUT_RESFILE2
\rm $IN_ASCFILE1
\rm $IN_ASCFILE2
\rm $OUT_ASCFILE1
\rm $OUT_ASCFILE2
\rm $IN_RESFILE_VARLIST1
\rm $IN_RESFILE_VARLIST2
\rm $OUT_RESFILE_VARLIST1
\rm $OUT_RESFILE_VARLIST2


if ( ("$RES_DIFF1" == "") && ("$RES_DIFF2" == "") ) then
    echo "TEST||STAGE $TESTNB STEP 2 : PASSED"
else
    echo "TEST||@@@@ STAGE $TESTNB STEP 2 : FAILED @@@@"
    exit 1
endif

echo "TEST||++++ STAGE $TESTNB : PASSED ++++"



echo "------------------------------------"
echo "-------- END AUTOTEST $TESTNB ----------"
echo "------------------------------------"
exit 0










