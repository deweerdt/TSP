<project name="TSP" basedir="." default="info" >
	<property name="tsp.home.dir" value="${basedir}" />
	<property name="src.dir" value="${tsp.home.dir}/src" />
	<property name="consumers.dir" value="${src.dir}/consumers" />
	<property name="provider.dir" value="${src.dir}/provider" />
	<property name="external.dir" value="${tsp.home.dir}/external" />
	<property name="skeleton.dir" value="${tsp.home.dir}/skeleton" />
	<property name="make.dir" value="${tsp.home.dir}/make" />
	<property name="tests.dir" value="${tsp.home.dir}/tests" />
	<property name="dist.dir" value="${tsp.home.dir}/dist" />          
        <property name="rpm.topdir" value="${dist.dir}/RPM" />
        <property name="doc.outputdir" value="${dist.dir}/doc" />
               
        <target name="init">
          <condition property="ant-1.5">
              <contains string="${ant.version}" substring="1.5"/>
          </condition>  
        </target>

        <target name="info" depends="init" description="o Informations about build options">

            <echo>
This is a ANT build file for the TSP which 
is used by developper to automated some
packaging task which are painful to be done
with make or other ancient but respectable unix tools.
For now you may use target
         ant [-Dtsp.version="x.y.z"] tar
            which makes a gzip compressed tarball 
            in the tsp/dist directory
         ant [-Dtsp.version="x.y.z"] zip
            which makes a zip archive
            in the tsp/dist directory
         ant -Dtsp.version="x.y.z" rpm
            which makes RPM archives
            in the tsp/dist/RPM directories
the default value for the version is a time stamp containing 
date, time and user name.                     
            </echo>
        </target>
	
	<target name="clean">
               <echo> Nothing to be done, see clean-dist. </echo>
	</target>		
        <target name="prepare-dist" depends="init">
            <mkdir dir="${dist.dir}"/> 
            <tstamp>
		<format property="timeStamp" pattern="dMMMMyyyy-HH'h'mm" locale="en"/>
	    </tstamp>
            <property name="tsp.version" value="${timeStamp}-${user.name}" />
        </target>
        <target name="clean-dist">
               <delete dir="${dist.dir}" />
	</target>		

        <target name="tar" depends="prepare-dist" description="o Build a tar file containing the TSP source">
              <tar destfile="${dist.dir}/tsp-${tsp.version}.tar">
                 <tarfileset mode="755" defaultexcludes="yes" dir="${tsp.home.dir}" prefix="tsp/">
                      <include name="config*" />
                      <include name="AUTHOR" />
                      <include name="COPYING" />
                      <include name="*.xml" />
                      <include name="INSTALL" />
                      <include name="install-sh" />
                      <include name="Makefile" />
                      <include name="README" />
                      <include name="ROADMAP" />
                      <include name="TODO" />
                 </tarfileset>
                 <tarfileset defaultexcludes="yes" dir="${src.dir}" prefix="tsp/src">
                     <exclude name="${src.dir}/**/*~"/>
                 </tarfileset>
                 <tarfileset defaultexcludes="yes" dir="${external.dir}" prefix="tsp/external">
                     <exclude name="${external.dir}/**/*~"/>
                 </tarfileset>
                 <tarfileset defaultexcludes="yes" dir="${skeleton.dir}" prefix="tsp/skeleton">
                     <exclude name="${skeleton.dir}/**/*~"/>
                 </tarfileset>
                 <tarfileset defaultexcludes="yes" dir="${make.dir}" prefix="tsp/make">
                     <exclude name="${make.dir}/**/*~"/>
                 </tarfileset>
                 <tarfileset defaultexcludes="yes" dir="${tests.dir}" prefix="tsp/tests">
                     <exclude name="${tests.dir}/**/*~"/>
                 </tarfileset>
              </tar>
        </target>
        <target name="targz" depends="tar" description="o Build a tar+gz file containing the TSP source">
             <gzip zipfile="${dist.dir}/tsp-${tsp.version}.tar.gz" src="${dist.dir}/tsp-${tsp.version}.tar" />
             <delete file="${dist.dir}/tsp-${tsp.version}.tar" />
        </target>
        <target name="tarbz2" depends="tar" description="o Build a tar+bzip2 file containing the TSP source">
             <bzip2 zipfile="${dist.dir}/tsp-${tsp.version}.tar.bz2" src="${dist.dir}/tsp-${tsp.version}.tar" />
             <delete file="${dist.dir}/tsp-${tsp.version}.tar" />
        </target>

        <target name="zip" depends="prepare-dist" description="o Build a zip file containing the TSP source">
              <zip destfile="${dist.dir}/tsp-${tsp.version}.zip">
                 <zipfileset defaultexcludes="yes" dir="${tsp.home.dir}" prefix="tsp/">
                      <include name="config*" />
                      <include name="AUTHOR" />
                      <include name="COPYING" />
                      <include name="*.xml" />
                      <include name="INSTALL" />
                      <include name="install-sh" />
                      <include name="Makefile" />
                      <include name="README" />
                      <include name="ROADMAP" />
                      <include name="TODO" />
                 </zipfileset>
                 <zipfileset defaultexcludes="yes" dir="${src.dir}" prefix="tsp/src">
                     <exclude name="${src.dir}/**/*~"/>
                 </zipfileset>
                 <zipfileset defaultexcludes="yes" dir="${external.dir}" prefix="tsp/external">
                     <exclude name="${external.dir}/**/*~"/>
                 </zipfileset>
                 <zipfileset defaultexcludes="yes" dir="${skeleton.dir}" prefix="tsp/skeleton">
                     <exclude name="${skeleton.dir}/**/*~"/>
                 </zipfileset>
                 <zipfileset defaultexcludes="yes" dir="${make.dir}" prefix="tsp/make">
                     <exclude name="${make.dir}/**/*~"/>
                 </zipfileset>
                 <zipfileset defaultexcludes="yes" dir="${tests.dir}" prefix="tsp/tests">
                     <exclude name="${tests.dir}/**/*~"/>
                 </zipfileset>
              </zip>
        </target>
        <!-- RPM task requires ant-nodeps jpackage -->
        <target name="rpm-common" depends="targz">
            <mkdir dir="${dist.dir}/tmp"/> 
            <mkdir dir="${rpm.topdir}"/> 
            <mkdir dir="${rpm.topdir}/BUILD"/> 
            <mkdir dir="${rpm.topdir}/RPMS"/>
            <mkdir dir="${rpm.topdir}/RPMS/athlon"/> 
            <mkdir dir="${rpm.topdir}/RPMS/i386"/>
            <mkdir dir="${rpm.topdir}/RPMS/i486"/>
            <mkdir dir="${rpm.topdir}/RPMS/i586"/>
            <mkdir dir="${rpm.topdir}/RPMS/i686"/>
            <mkdir dir="${rpm.topdir}/RPMS/k6"/>
            <mkdir dir="${rpm.topdir}/RPMS/noarch"/>
            <mkdir dir="${rpm.topdir}/SOURCES"/> 
            <mkdir dir="${rpm.topdir}/SPECS"/> 
            <mkdir dir="${rpm.topdir}/SRPMS"/>             
            <delete>
              <fileset dir="${rpm.topdir}/RPMS" includes="**/tsp*.rpm"/>
            </delete>
            <copy file="${dist.dir}/tsp-${tsp.version}.tar.gz" todir="${rpm.topdir}/SOURCES/"/>
            <copy file="${src.dir}/scripts/tsp.spec" todir="${rpm.topdir}/SPECS/"/>
        </target>
        <target name="rpm" depends="rpm-common,rpm-ant-1.6,rpm-ant-1.5" description="o Build TSP RPM package (source and binary)">
        </target>
        <target name="rpm-ant-1.6" unless="ant-1.5">
            <rpm specFile="tsp.spec" topDir="${rpm.topdir}" command="-bb -vv --buildroot=${dist.dir}/tmp"/>
	    <rpm specFile="tsp.spec" topDir="${rpm.topdir}" command="-bs -vv --buildroot=${dist.dir}/tmp"/>
        </target>
        <target name="rpm-ant-1.5" if="ant-1.5">
            <rpm specFile="tsp.spec" topDir="${rpm.topdir}" command="-bb -vv"/> 
	    <rpm specFile="tsp.spec" topDir="${rpm.topdir}" command="-bs -vv"/>
        </target>

        <target name="apidoc" depends="init"  description="o Generate API documentation using doxygen">           
            <mkdir dir="${doc.outputdir}" />  
            <exec executable="make" dir="${src.dir}/doxy">
            </exec>
        </target>
</project>
